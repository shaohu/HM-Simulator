/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialog_numericalTransformSet.java
 *
 * Created on 2011-10-9, 18:20:08
 */

package levyflight;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import levyflight.Export.StatisticGraphGen;
import levyflight.Statistic.FrequencyCal;
import levyflight.Statistic.StatisticBinningStrategy;
import levyflight.Transformer.NumericalTransformer;
import levyflight.Transformer.NumericalTransformer_Exponential;
import levyflight.Transformer.NumericalTransformer_Linear;
import levyflight.Transformer.NumericalTransformer_Log;


/**
 *
 * @author wu
 */
public class JDialog_numericalTransformSet extends javax.swing.JDialog
{
    static private NumericalTransformer numericalTransformerResult=new NumericalTransformer_Linear(1,0);

    static public NumericalTransformer getNumericalTransformer(java.awt.Frame parent,EnvironmentParameter ep)
    {
        JDialog_numericalTransformSet dialog=new JDialog_numericalTransformSet(parent,true,ep);
        dialog.setVisible(true);
        if(numericalTransformerResult==null)
        {
            numericalTransformerResult=new NumericalTransformer_Linear(1,0);
        }
        return numericalTransformerResult;
    }

    /**
     * 所有转换类的集合
     */
    private ArrayList<NumericalTransformer> transFormerList=null;

    /**
     * 原始统计面板
     */
    private  StaticGraPanel staticGraPanel_origion=null;

    /**
     * 转换后的统计面板
     */
    private  StaticGraPanel staticGraPanel_transformed=null;

    private ArrayList<Double> dataLiatOriginal=null;

    /**
     * 环境变量集合
     */
    EnvironmentParameter ep;

    /** Creates new form JDialog_numericalTransformSet */
    public JDialog_numericalTransformSet(java.awt.Frame parent, boolean modal,EnvironmentParameter ep)
    {
        super(parent, modal);
        initComponents();
        try{
        this.staticGraPanel_origion=(StaticGraPanel) this.jPanel1;
        this.staticGraPanel_transformed=(StaticGraPanel) this.jPanel2;
        this.ep=ep;
        this.dataLiatOriginal=ep.field.getAllValueAtBand(0);
        this.jComboBox_transfromatioCollection.removeAllItems();
        this.transFormerList=new ArrayList<NumericalTransformer>();
        this.transFormerList.add(new NumericalTransformer_Linear(1,0));
        this.transFormerList.add(new NumericalTransformer_Log(1,0,0));
        this.transFormerList.add(new NumericalTransformer_Exponential(1,0));
        for(NumericalTransformer transformer : this.transFormerList)
        {
            this.jComboBox_transfromatioCollection.addItem(transformer.getDescription());
        }
        StatisticBinningStrategy statisticStrategy=new StatisticBinningStrategy(StatisticBinningStrategy.strategy_optimal,0);
        FrequencyCal frequencyCal_original=new FrequencyCal(this.dataLiatOriginal,statisticStrategy);
        this.staticGraPanel_origion.graGenerator_frequency=new StatisticGraphGen(frequencyCal_original.getMinValue(),frequencyCal_original.getInterval(),frequencyCal_original.getFrequencyList());
        this.staticGraPanel_origion.repaint();

        }catch(Exception e)
        {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage());
        }
        double min=ep.field.getExtremums()[0];
        double max=ep.field.getExtremums()[1];
        this.jLabel_gridValueRange.setText("Grid value range: [ "+min+" , "+max+" ]");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new StaticGraPanel();
        jPanel2 = new StaticGraPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_transfromatioCollection = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_parameters = new javax.swing.JTable();
        jLabel_expression = new javax.swing.JLabel();
        jButton_generateGraphic = new javax.swing.JButton();
        jButton_Cancel = new javax.swing.JButton();
        jButton_OK = new javax.swing.JButton();
        jLabel_gridValueRange = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(levyflight.LevyFlightApp.class).getContext().getResourceMap(JDialog_numericalTransformSet.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setFont(resourceMap.getFont("Form.font")); // NOI18N
        setMinimumSize(new java.awt.Dimension(667, 660));
        setName("Form"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 38));

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(318, 260));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 314, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 82, -1, 260));

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(318, 260));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 329, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(334, 82, 333, 260));

        jLabel2.setBackground(resourceMap.getColor("jLabel2.background")); // NOI18N
        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 58, -1, -1));

        jLabel3.setBackground(resourceMap.getColor("jLabel3.background")); // NOI18N
        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(334, 58, -1, -1));

        jComboBox_transfromatioCollection.setFont(resourceMap.getFont("jComboBox_transfromatioCollection.font")); // NOI18N
        jComboBox_transfromatioCollection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_transfromatioCollection.setName("jComboBox_transfromatioCollection"); // NOI18N
        jComboBox_transfromatioCollection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_transfromatioCollectionActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox_transfromatioCollection, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 230, -1));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable_parameters.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable_parameters.setFont(resourceMap.getFont("jTable_parameters.font")); // NOI18N
        jTable_parameters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Parameter", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_parameters.setName("jTable_parameters"); // NOI18N
        jTable_parameters.setRowHeight(20);
        jTable_parameters.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(jTable_parameters);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 230, 100));

        jLabel_expression.setFont(resourceMap.getFont("jLabel_expression.font")); // NOI18N
        jLabel_expression.setText(resourceMap.getString("jLabel_expression.text")); // NOI18N
        jLabel_expression.setName("jLabel_expression"); // NOI18N
        getContentPane().add(jLabel_expression, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 380, 20));

        jButton_generateGraphic.setFont(resourceMap.getFont("jButton_generateGraphic.font")); // NOI18N
        jButton_generateGraphic.setForeground(resourceMap.getColor("jButton_generateGraphic.foreground")); // NOI18N
        jButton_generateGraphic.setText(resourceMap.getString("jButton_generateGraphic.text")); // NOI18N
        jButton_generateGraphic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_generateGraphicActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_generateGraphic, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 410, 260, 30));

        jButton_Cancel.setFont(resourceMap.getFont("jButton_Cancel.font")); // NOI18N
        jButton_Cancel.setText(resourceMap.getString("jButton_Cancel.text")); // NOI18N
        jButton_Cancel.setName("jButton_Cancel"); // NOI18N
        jButton_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 460, 120, -1));

        jButton_OK.setFont(resourceMap.getFont("jButton_OK.font")); // NOI18N
        jButton_OK.setText(resourceMap.getString("jButton_OK.text")); // NOI18N
        jButton_OK.setName("jButton_OK"); // NOI18N
        jButton_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_OKActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_OK, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 460, 120, -1));

        jLabel_gridValueRange.setFont(resourceMap.getFont("jLabel_gridValueRange.font")); // NOI18N
        jLabel_gridValueRange.setForeground(resourceMap.getColor("jLabel_gridValueRange.foreground")); // NOI18N
        jLabel_gridValueRange.setText(resourceMap.getString("jLabel_gridValueRange.text")); // NOI18N
        jLabel_gridValueRange.setName("jLabel_gridValueRange"); // NOI18N
        getContentPane().add(jLabel_gridValueRange, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_transfromatioCollectionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBox_transfromatioCollectionActionPerformed
    {//GEN-HEADEREND:event_jComboBox_transfromatioCollectionActionPerformed
        int index=this.jComboBox_transfromatioCollection.getSelectedIndex();
        if(this.transFormerList==null)
        {
            return;
        }
        NumericalTransformer transformer=this.transFormerList.get(index);
        this.jLabel_expression.setText("Transform expression : "+this.transFormerList.get(index).getExpression());
        
        String[] columNames=new String[2];
        columNames[0]="parameter";
        columNames[1]="value";

        DefaultTableModel tableModel=(DefaultTableModel) this.jTable_parameters.getModel();
        tableModel.setRowCount(0);

        if(transformer instanceof NumericalTransformer_Linear)
        {
            Object[] row1=new Object[2];
            row1[0]="a";
            row1[1]=new Double(1);
            Object[] row2=new Object[2];
            row2[0]="b";
            row2[1]=new Double(0);
            tableModel.addRow(row1);
            tableModel.addRow(row2);
        }else if(transformer instanceof NumericalTransformer_Log)
        {
            Object[] row_a=new Object[2];
            row_a[0]="a";
            row_a[1]=new Double(1);
            tableModel.addRow(row_a);
            Object[] row_b=new Object[2];
            row_b[0]="b";
            row_b[1]=new Double(0);
            tableModel.addRow(row_b);
            Object[] row_k=new Object[2];
            row_k[0]="k";
            row_k[1]=new Double(0);
            tableModel.addRow(row_k);
        }else if(transformer instanceof NumericalTransformer_Exponential)
        {
            Object[] row1=new Object[2];
            row1[0]="a";
            row1[1]=new Double(1);
            Object[] row2=new Object[2];
            row2[0]="b";
            row2[1]=new Double(0);
            tableModel.addRow(row1);
            tableModel.addRow(row2);
        }
    }//GEN-LAST:event_jComboBox_transfromatioCollectionActionPerformed

    //绘制新的变化后的图
    private void jButton_generateGraphicActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_generateGraphicActionPerformed
    {//GEN-HEADEREND:event_jButton_generateGraphicActionPerformed
       try
       {
            int index=this.jComboBox_transfromatioCollection.getSelectedIndex();
            NumericalTransformer transformer=this.transFormerList.get(index);

            if(transformer instanceof NumericalTransformer_Linear)
            {
                NumericalTransformer_Linear numericalTransformer_Linear = (NumericalTransformer_Linear) transformer;
                numericalTransformer_Linear.setParameters((Double)this.jTable_parameters.getValueAt(0, 1), (Double)this.jTable_parameters.getValueAt(1, 1));
            }else if(transformer instanceof NumericalTransformer_Log)
            {
                NumericalTransformer_Log numericalTransformer_Log = (NumericalTransformer_Log) transformer;
                numericalTransformer_Log.setParameters((Double)this.jTable_parameters.getValueAt(0, 1),(Double)this.jTable_parameters.getValueAt(1, 1),(Double)this.jTable_parameters.getValueAt(2, 1));
            }else if(transformer instanceof NumericalTransformer_Exponential)
            {
                NumericalTransformer_Exponential numericalTransformer_Exponential = (NumericalTransformer_Exponential) transformer;
                numericalTransformer_Exponential.setParameters((Double)this.jTable_parameters.getValueAt(0, 1), (Double)this.jTable_parameters.getValueAt(1, 1));
            }

            ArrayList<Double> dataListTransformed=new ArrayList<Double>();
            for(Double d : this.dataLiatOriginal)
            {
                dataListTransformed.add(transformer.transform(d));
            }
            StatisticBinningStrategy statisticStrategy=new StatisticBinningStrategy(StatisticBinningStrategy.strategy_optimal,0);
            FrequencyCal frequencyCal_transformed=new FrequencyCal(dataListTransformed,statisticStrategy);
            this.staticGraPanel_transformed.graGenerator_frequency=new StatisticGraphGen(frequencyCal_transformed.getMinValue(),frequencyCal_transformed.getInterval(),frequencyCal_transformed.getFrequencyList());
            this.staticGraPanel_transformed.repaint();

        }catch(Exception e)
       {
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton_generateGraphicActionPerformed

    private void jButton_CancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_CancelActionPerformed
    {//GEN-HEADEREND:event_jButton_CancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton_CancelActionPerformed

    private void jButton_OKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_OKActionPerformed
    {//GEN-HEADEREND:event_jButton_OKActionPerformed
        int index=this.jComboBox_transfromatioCollection.getSelectedIndex();
        NumericalTransformer transformer=this.transFormerList.get(index);

        if(transformer instanceof NumericalTransformer_Linear)
        {
            NumericalTransformer_Linear numericalTransformer_Linear = (NumericalTransformer_Linear) transformer;
            numericalTransformer_Linear.setParameters((Double)this.jTable_parameters.getValueAt(0, 1), (Double)this.jTable_parameters.getValueAt(1, 1));
        }else if(transformer instanceof NumericalTransformer_Log)
        {
            NumericalTransformer_Log numericalTransformer_Log = (NumericalTransformer_Log) transformer;
            numericalTransformer_Log.setParameters((Double)this.jTable_parameters.getValueAt(0, 1),(Double)this.jTable_parameters.getValueAt(1, 1),(Double)this.jTable_parameters.getValueAt(2, 1));
        }else if(transformer instanceof NumericalTransformer_Exponential)
        {
            NumericalTransformer_Exponential numericalTransformer_Exponential = (NumericalTransformer_Exponential) transformer;
            numericalTransformer_Exponential.setParameters((Double)this.jTable_parameters.getValueAt(0, 1), (Double)this.jTable_parameters.getValueAt(1, 1));
        }
        JDialog_numericalTransformSet.numericalTransformerResult=transformer;
        this.dispose();
    }//GEN-LAST:event_jButton_OKActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Cancel;
    private javax.swing.JButton jButton_OK;
    private javax.swing.JButton jButton_generateGraphic;
    private javax.swing.JComboBox jComboBox_transfromatioCollection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_expression;
    private javax.swing.JLabel jLabel_gridValueRange;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_parameters;
    // End of variables declaration//GEN-END:variables

    private class StaticGraPanel extends JPanel
    {

        /**
         * 用于绘制频率图的类
         */
        public StatisticGraphGen graGenerator_frequency = null;


        @Override
        public void paintComponent(Graphics g)
        {
            super.paintComponent(g);
            if (this.graGenerator_frequency != null)
            {
                g.drawImage(this.graGenerator_frequency.generateGraphAsHistogram(this.getWidth(), this.getHeight(),false), 0, 0, null);
            }
        }
    }

}
